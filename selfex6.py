import numpy as np
import scipy.stats as stats
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import matplotlib.style as style
import math
import random
from IPython.core.display import HTML

people = [939, 942, 939, 898, 883, 871, 969, 946, 953, 934, 1002, 988, 914, 917, 948, 910, 957, 967, 1008, 1005, 956, 1036, 995, 986, 940, 945, 942, 951, 979, 1031, 989, 961, 962, 1039, 981, 1001, 968, 998, 999, 925, 918, 956, 973, 974, 966, 984, 1008, 986, 970, 1001, 968, 980, 981, 1009, 985, 965, 981, 951, 926, 939, 934, 976, 948, 938, 928, 955, 988, 963, 917, 901, 958, 930, 972, 975, 990, 940, 913, 910, 968, 934, 939, 950, 964, 953, 1013, 959, 958, 971, 908, 921, 951, 945, 898, 890, 946, 986, 885, 944, 941, 1015]
peopleall = [9392, 9406, 9489, 9478, 9394, 9699, 9524, 9836, 9629, 9625, 9460, 9537, 9562, 9836, 9689, 9850, 9757, 9654, 9697, 9876, 9996, 10143, 9825, 9888, 9779, 10022, 9808, 9871, 9690, 9890, 10013, 10108, 9814, 9988, 9812, 9689, 9982, 9923, 9787, 9967, 10065, 9846, 9817, 9743, 9740, 9558, 9555, 9765, 10004, 9918, 9806, 9743, 9846, 9666, 9738, 9850, 9745, 10038, 10028, 9717, 9913, 9651, 9517, 9719, 9719, 9530, 9834, 10039, 9769, 9590, 9658, 9494, 9623, 9391, 9334, 9268, 9541, 9773, 9987, 9806, 9799, 9908, 9851, 9807, 9681, 9561, 9429, 9490, 9653, 9704, 9642, 9894, 10126, 10096, 10196, 9975, 10005, 10028, 10225, 9913]

a1 = [97, 89, 114, 92, 100, 3, 1, 3, 1, 2, 10, 10, 13, 10, 18, 23, 29, 24, 29, 35, 28, 21, 26, 24, 18, 39, 32, 31, 37, 30, 21, 25, 17, 25, 26, 21, 26, 23, 21, 15, 27, 20, 38, 23, 26, 27, 22, 23, 22, 28, 24, 28, 28, 30, 21, 29, 32, 23, 27, 20, 33, 34, 20, 40, 17, 24, 17, 18, 18, 19, 37, 31, 25, 22, 34, 28, 25, 27, 23, 18, 18, 20, 28, 31, 31, 30, 16, 28, 21, 28, 23, 34, 17, 26, 23, 25, 29, 30, 28, 34, 28, 25, 24, 16, 33, 34, 31, 26, 24, 17, 33, 21, 21, 36, 31, 19, 18, 17, 26, 20, 22, 23, 24, 33, 12, 27, 39, 33, 28, 27, 22, 21, 30, 26, 29, 27, 22, 18, 21, 24, 28, 27, 20, 36, 26, 35, 23, 30, 15, 23, 24, 26, 26, 25, 39, 32, 27, 26, 22, 24, 19, 30, 20, 18, 19, 23, 28, 31, 20, 37, 31, 33, 39, 20, 27, 28, 16, 25, 21, 23, 22, 20, 26, 26, 21, 22, 27, 23, 20, 30, 28, 29, 21, 24, 35, 29, 23, 39, 30, 34, 14, 20, 14, 21, 23, 25, 31, 30, 21, 28, 22, 27, 23, 29, 28, 24, 25, 25, 28, 25, 19, 28, 24, 28, 14, 23, 32, 28, 38, 25, 20, 25, 28, 23, 31, 25, 16, 29, 27, 27, 27, 16, 27, 29, 23, 31, 22, 29, 31, 14, 24, 23, 33, 39, 27, 26, 23, 12, 24, 21, 21, 26, 36, 23, 21, 15, 25, 23, 22, 26, 30, 24, 19, 28, 28, 32, 38, 22, 30, 38, 22, 11, 14, 22, 12, 25, 29, 25, 27, 20, 23, 26, 32, 26, 34, 31, 29, 36, 28, 28, 23, 32, 18, 25, 20, 29, 22, 29, 29, 38, 18, 16, 24, 22, 14, 25, 29, 25, 27, 24, 26, 38, 40, 29, 25, 23, 17, 18, 26, 17, 25, 25, 36, 35, 27, 26, 26, 27, 24, 25, 17, 21, 26, 27, 20, 20, 29, 32, 17, 28, 24, 24, 20, 22, 30, 23, 25, 33, 23, 29, 22, 22, 21, 25, 30, 21, 23, 23, 25, 21, 34, 29, 28, 26, 24, 31, 24, 24, 30, 25, 19, 10, 23, 17, 26, 30, 29, 28, 28, 23, 36, 27, 32, 25, 28, 30, 17, 15, 19, 20, 27, 25, 18, 22, 32, 24, 27, 27, 23, 29, 24, 26, 33, 32, 26, 18, 23, 28, 24, 19, 28, 26, 21, 20, 30, 33, 20, 31, 27, 24, 27, 27, 27, 25, 29, 29, 26, 26, 29, 26, 14, 19, 20, 24, 20, 29, 35, 20, 24, 30, 23, 26, 26, 28, 24, 23, 30, 25, 26, 22, 21, 22, 24, 32, 22, 26, 21, 32, 21, 27, 30, 24, 32, 23, 27, 18, 27, 22, 21, 33, 33, 32, 29, 37, 26, 18, 16, 12, 20, 16, 26, 30, 34, 32, 32, 20, 17, 23, 20, 31]
a2 = [88, 99, 103, 100, 103, 2, 4, 2, 3, 2, 11, 12, 13, 15, 7, 25, 31, 28, 19, 27, 27, 30, 33, 29, 25, 35, 24, 28, 36, 23, 25, 26, 24, 26, 27, 19, 28, 23, 19, 24, 30, 28, 26, 25, 27, 25, 24, 31, 34, 21, 17, 19, 10, 13, 19, 39, 37, 32, 44, 37, 19, 11, 13, 9, 13, 34, 32, 29, 33, 24, 22, 28, 19, 27, 29, 27, 21, 35, 32, 17, 35, 19, 21, 29, 26, 23, 26, 25, 31, 31, 34, 20, 28, 25, 27, 31, 22, 13, 30, 16, 23, 29, 31, 25, 35, 18, 25, 35, 24, 27, 22, 19, 24, 24, 22, 23, 20, 23, 23, 21, 38, 33, 35, 30, 34, 18, 19, 11, 17, 20, 33, 25, 30, 20, 33, 25, 31, 42, 20, 42, 19, 18, 20, 18, 25, 28, 31, 22, 21, 33, 19, 21, 25, 25, 35, 18, 30, 15, 24, 28, 23, 32, 28, 25, 21, 33, 24, 28, 22, 19, 25, 17, 23, 24, 44, 25, 26, 20, 32, 27, 25, 24, 34, 33, 27, 28, 27, 23, 17, 16, 26, 25, 18, 20, 19, 30, 34, 29, 32, 31, 23, 22, 28, 31, 19, 27, 28, 26, 33, 31, 23, 14, 23, 18, 23, 30, 32, 32, 35, 40, 12, 21, 18, 30, 11, 26, 29, 31, 30, 32, 21, 25, 22, 18, 23, 21, 23, 26, 25, 30, 30, 27, 28, 24, 28, 22, 27, 35, 29, 37, 22, 23, 17, 35, 31, 18, 17, 11, 22, 16, 33, 28, 22, 28, 23, 23, 25, 34, 24, 25, 22, 19, 24, 26, 32, 36, 27, 27, 37, 24, 17, 24, 26, 18, 20, 26, 27, 26, 29, 19, 25, 22, 15, 19, 22, 28, 37, 37, 33, 33, 20, 26, 25, 15, 20, 26, 27, 31, 25, 22, 21, 30, 24, 22, 23, 30, 21, 29, 22, 28, 33, 37, 34, 38, 41, 20, 21, 16, 17, 14, 24, 31, 17, 23, 22, 33, 32, 43, 22, 22, 15, 21, 22, 24, 14, 24, 26, 28, 29, 34, 28, 23, 32, 27, 34, 18, 22, 25, 12, 20, 22, 25, 41, 21, 32, 28, 31, 36, 33, 24, 20, 13, 27, 23, 20, 33, 30, 27, 21, 20, 17, 34, 22, 15, 33, 35, 34, 26, 20, 26, 31, 23, 21, 20, 20, 21, 29, 25, 20, 21, 34, 31, 29, 32, 30, 17, 22, 14, 20, 31, 30, 28, 24, 30, 27, 32, 26, 35, 27, 28, 18, 22, 25, 16, 24, 22, 39, 39, 27, 25, 27, 24, 20, 24, 31, 10, 17, 19, 13, 14, 26, 33, 24, 31, 27, 29, 37, 22, 35, 32, 25, 21, 23, 24, 23, 32, 20, 20, 16, 29, 21, 21, 35, 29, 21, 12, 20, 24, 19, 28, 22, 27, 39, 39, 32, 26, 19, 26, 17, 36, 27, 24, 20, 26, 23, 18, 23, 30, 27, 16, 24, 32, 26, 21, 14, 29, 23, 30, 27, 32]
a3 = [117, 100, 93, 87, 107, 0, 0, 0, 0, 0, 13, 10, 20, 8, 16, 37, 20, 27, 23, 22, 26, 19, 28, 27, 19, 45, 37, 31, 46, 30, 29, 27, 16, 21, 21, 13, 18, 13, 21, 24, 37, 42, 24, 18, 19, 16, 20, 28, 29, 25, 17, 33, 27, 36, 21, 34, 25, 36, 38, 38, 12, 14, 18, 19, 17, 37, 24, 28, 29, 36, 26, 15, 21, 24, 21, 27, 31, 23, 21, 29, 21, 30, 27, 24, 34, 31, 27, 25, 31, 27, 26, 27, 25, 24, 26, 19, 24, 27, 23, 22, 34, 28, 22, 32, 34, 16, 20, 9, 18, 10, 34, 34, 40, 27, 31, 26, 29, 18, 20, 24, 31, 28, 30, 29, 36, 26, 16, 19, 32, 31, 18, 18, 17, 27, 18, 28, 31, 30, 33, 33, 23, 27, 23, 29, 21, 28, 29, 37, 20, 34, 29, 17, 17, 18, 19, 23, 26, 19, 20, 24, 30, 29, 42, 26, 33, 22, 25, 21, 23, 22, 25, 23, 23, 31, 25, 31, 28, 34, 28, 24, 26, 29, 27, 22, 20, 20, 20, 22, 25, 19, 32, 25, 24, 36, 30, 20, 15, 22, 29, 26, 28, 21, 27, 38, 28, 31, 23, 22, 26, 32, 22, 16, 19, 20, 25, 27, 22, 18, 20, 29, 24, 26, 28, 35, 44, 31, 28, 23, 26, 30, 15, 15, 21, 17, 22, 34, 28, 31, 28, 32, 18, 20, 20, 23, 20, 29, 29, 23, 33, 26, 20, 32, 32, 25, 24, 26, 26, 22, 21, 14, 31, 22, 17, 28, 34, 28, 22, 29, 28, 41, 23, 22, 13, 23, 23, 26, 22, 31, 27, 29, 25, 19, 23, 30, 24, 23, 37, 22, 40, 18, 19, 18, 27, 24, 25, 24, 30, 29, 33, 23, 22, 28, 14, 17, 27, 24, 26, 23, 31, 31, 31, 22, 18, 30, 32, 27, 17, 33, 29, 30, 23, 28, 18, 20, 21, 38, 23, 30, 41, 31, 25, 22, 15, 17, 17, 29, 24, 30, 28, 25, 32, 28, 33, 19, 25, 20, 22, 18, 22, 21, 27, 26, 28, 27, 35, 33, 33, 21, 32, 19, 26, 26, 30, 25, 16, 28, 22, 21, 19, 20, 29, 26, 22, 38, 29, 31, 27, 24, 27, 31, 29, 26, 19, 22, 20, 21, 22, 36, 26, 24, 27, 20, 23, 20, 24, 27, 17, 24, 29, 27, 35, 29, 30, 24, 36, 25, 23, 18, 22, 17, 33, 27, 29, 26, 30, 17, 23, 24, 14, 22, 21, 31, 21, 23, 20, 29, 33, 21, 37, 32, 21, 21, 27, 23, 22, 25, 23, 34, 28, 25, 24, 15, 15, 27, 22, 24, 34, 22, 23, 22, 34, 29, 34, 26, 32, 31, 26, 23, 19, 19, 31, 23, 20, 32, 20, 31, 25, 24, 30, 27, 19, 27, 19, 20, 19, 30, 31, 30, 33, 31, 15, 17, 15, 21, 22, 32, 26, 25, 23, 39, 26, 30, 26, 25, 20, 23, 31, 17, 32, 21]
a = np.sum([a1, a2, a3], axis=0)/3

aa = []
num = 0
cyclesum = 0
for i in range(len(a)):
    cyclenum = 1
    num += 1
    if num < 5:
        cyclesum += a[i]
    elif num == 5:
        num = 0
        cyclesum += people[cyclenum] * 2
        cyclenum += 1
        aa.append(cyclesum)
        cyclesum = 0

aa[0] += 125
b = []
for i in range(len(aa)):
    need = peopleall[i] + 500 + 500  # 500 指名, 500 回傳
    b.append(need)

# fig, ax1 = plt.subplots()
# ax2 = ax1.twinx()

width = 0.5
xsign = ['our', 'compare']

# ax1.plot(aa, '-', label='our')
# ax1.plot(np.sum(b)/100, '--', label='compare')
gg = np.mean(aa)
ggg = np.mean(b)
bar1 = [round(gg, 2), round(ggg, 2)]
bar2 = np.mean(b)

for x, y in enumerate(bar1):
    plt.text(x, y+5, '%s'%y, ha='center')

# ax1.bar(np.arange(len(xsign)), bar1, width, label='high', hatch='o', color='white', edgecolor='black')
# ax1.bar(np.arange(len(xsign)) + width, bar2, width, label='low', hatch='*', color='white', edgecolor='red')

# ax1.set_xticks(np.arange(len(xsign)) + width/2, xsign)
# ax1.legend(bbox_to_anchor=(1, 1), loc='best')
# ax1.set_ylim([0, 550])
# ax1.yaxis.set_major_locator(ticker.MultipleLocator(500))
# ax2.set_ylim([0, 1000])

plt.bar(np.arange(len(xsign)), bar1, width, label='high', hatch='', color='white', edgecolor='black')
# plt.bar(1 + width, bar2, width, label='low', hatch='*', color='white', edgecolor='red')

# plt.legend(bbox_to_anchor=(1, 1), loc='best')
plt.gca().yaxis.set_major_locator(ticker.MultipleLocator(500))
plt.xticks(np.arange(len(xsign)), xsign)

plt.grid()
plt.show()
